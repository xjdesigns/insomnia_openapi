{"version":3,"sources":["components/header.tsx","components/converter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","defaultConfig","Converter","useState","inoInput","setInoInput","inoOutput","setInoOutput","openapiConfig","setOpenapiConfig","notifState","setNotifState","redocDisplay","setRedocDisplay","updateConfig","ev","key","value","target","prevState","fileHandler","a","file","files","item","text","console","error","onChange","val","warn","placeholder","htmlFor","type","id","accept","onClick","output","Parser","JSON","parse","convert","stringify","err","disabled","readOnly","spec","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a076883b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n\treturn (\n\t\t<header className=\"ino-header\">\n\t\t\t<div className=\"ino-header__title\">\n\t\t\t\tInsomniaV4 {`->`} OpenAPI V3\n\t\t\t</div>\n\t\t\t<div className=\"ino-header__ext\">\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"spx-pill spx-pill--tr\">\n\t\t\t\t\t\tnpm install insomnia_openapi\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport { Parser } from 'insomnia_openapi'\nimport { RedocStandalone } from 'redoc'\n\nlet defaultConfig = {\n\t\"title\": \"\",\n\t\"description\": \"\",\n\t\"version\": \"1.0.0\"\n}\n\nconst Converter = () => {\n\tconst [inoInput, setInoInput] = useState('')\n\tconst [inoOutput, setInoOutput] = useState('')\n\tconst [openapiConfig, setOpenapiConfig] = useState(defaultConfig)\n\tconst [notifState, setNotifState] = useState('waiting')\n\tconst [redocDisplay, setRedocDisplay] = useState(false)\n\n\tconst handleInput = (ev: React.ChangeEvent<HTMLTextAreaElement>) => {\n\t\tconst val = ev.target.value\n\t\tsetInoInput(val)\n\t\tconsole.warn('lets go woot')\n\t}\n\n\tconst handleConvert = () => {\n\t\ttry {\n\t\t\tconst parser = new Parser(JSON.parse(inoInput), { openapiConfig })\n\t\t\tconst output: any = parser.convert()\n\t\t\tsetInoOutput(JSON.stringify(output, null, '  '))\n\t\t\tsetNotifState('success')\n\t\t\tconsole.warn('output::', output)\n\t\t} catch (err) {\n\t\t\tsetNotifState('error')\n\t\t\tsetInoOutput('')\n\t\t\tconsole.error(err)\n\t\t}\n\t}\n\n\tconst updateConfig = (ev: React.ChangeEvent<HTMLInputElement>, key: string) => {\n\t\tconst value = ev.target.value\n\t\tsetOpenapiConfig(prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[key]: value\n\t\t\t}\n\t\t});\n\t}\n\n\tconst openRedoc = () => {\n\t\tif (inoOutput) {\n\t\t\tsetRedocDisplay(true)\n\t\t}\n\t}\n\n\tconst handleReset = () => {\n\t\tsetOpenapiConfig(defaultConfig)\n\t\tsetInoInput('')\n\t\tsetInoOutput('')\n\t\tsetNotifState('waiting')\n\t}\n\n\tconst notifColor = () => {\n\t\tif (notifState === 'error') {\n\t\t\treturn 'ino-notifbar--err'\n\t\t}\n\n\t\tif (notifState === 'success') {\n\t\t\treturn 'ino-notifbar--sc'\n\t\t}\n\t}\n\n\tconst fileHandler = async (ev: any) => {\n\t\tconst file = ev.target.files.item(0)\n\t\t\n\t\ttry {\n\t\t\tconst text = await file.text();\n\t\t\tsetInoInput(text)\n\t\t} catch (err) {\n\t\t\tsetNotifState('error')\n\t\t\tconsole.error(err)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={`ino-notifbar ${notifColor()}`}>{notifState}</div>\n\t\t\t<div className=\"ino-convert-container spx-form\">\n\t\t\t\t<div className=\"ino-c-input\">\n\t\t\t\t\t<textarea className=\"spx-textarea\" onChange={handleInput} placeholder=\"Input from insomnia v4 JSON export\" value={inoInput} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ino-c-actions\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label className=\"spx-label\" htmlFor=\"title\">Title</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"title\" className=\"spx-input\" onChange={ev => updateConfig(ev, 'title')} placeholder=\"API Title\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label className=\"spx-label\" htmlFor=\"description\">Description</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"description\" className=\"spx-input\" onChange={ev => updateConfig(ev, 'description')} placeholder=\"API Description\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label className=\"spx-label\" htmlFor=\"version\">Version</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"version\" className=\"spx-input\" onChange={ev => updateConfig(ev, 'version')} placeholder=\"API Version\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label className=\"spx-label\" htmlFor=\"fileApi\">Use File</label>\n\t\t\t\t\t\t<input type=\"file\" accept=\".json\" id=\"fileApi\" className=\"spx-input\" onChange={fileHandler} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"spx-mg-bt-12\">\n\t\t\t\t\t\t<button className=\"spx-btn spx-btn--pr spx-btn--block\" onClick={handleConvert}>Convert</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"spx-mg-bt-12\">\n\t\t\t\t\t\t<button className=\"spx-btn spx-btn--sd spx-btn--block\" onClick={handleReset}>Reset</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"spx-mg-bt-12\">\n\t\t\t\t\t\t<button className=\"spx-btn spx-btn--pr--inverted spx-btn--block\" onClick={openRedoc} disabled={!inoOutput}>Redoc</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"spx-mg-bt-12\">\n\t\t\t\t\t\t<p className=\"ino-txt-sm\">\n\t\t\t\t\t\t\tIf you have imported an openapi spec already or built out using the design document, you can still use\n\t\t\t\t\t\t\tthe tool but in the insomnia payload there is already a yaml export.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ino-c-output\">\n\t\t\t\t\t<textarea className=\"spx-textarea\" value={inoOutput} readOnly placeholder=\"Export to OpenApi V3\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{redocDisplay && (\n\t\t\t\t<div className=\"ino-redoc\">\n\t\t\t\t\t<div className=\"ino-redoc-close\">\n\t\t\t\t\t\t<button className=\"spx-btn spx-btn--sm spx-btn--circle\" onClick={() => setRedocDisplay(false)}>X</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ino-redoc-cont\">\n\t\t\t\t\t\t<RedocStandalone spec={JSON.parse(inoOutput)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ino-redoc-overlay\" />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Converter","import Header from './components/header'\nimport Converter from './components/converter'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Header />\n\t\t\t<Converter />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'segment_css/SEGMENT/2.0.0/segment.2.0.0.min.css'\nimport './styles.css'\n\n// @ts-ignore\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}